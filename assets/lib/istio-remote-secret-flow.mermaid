sequenceDiagram
    participant CLI as istioctl CLI
    participant Remote as Remote Cluster API
    participant K8s as Kubernetes API Server
    participant Client as Client Cluster
    
    Note over CLI,Client: Step 1: Access Remote API Server
    CLI->>Remote: Connect using --kubeconfig/--context
    
    Note over CLI,Client: Step 2: Create Access Components
    CLI->>Remote: Create istio-reader-service-account
    CLI->>Remote: Create ClusterRole (read-only)
    CLI->>Remote: Create ClusterRoleBinding
    
    Note over CLI,Client: Step 3: Create Token Secret
    CLI->>Remote: Create kubernetes.io/service-account-token Secret
    K8s->>Remote: Auto-populate JWT token & CA cert
    
    Note over CLI,Client: Step 4: Generate Remote Access Secret
    CLI->>Remote: Read populated token secret
    Remote-->>CLI: Return JWT token + CA certificate
    CLI->>CLI: Generate base64-encoded kubeconfig
    CLI->>Client: Create istio-remote-secret in client cluster
    
    Note over CLI,Client: Step 5: Istiod Uses Secret
    Client->>Client: Istiod reads remote secret
    Client->>Remote: Istiod connects to remote API using token